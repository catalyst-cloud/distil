{
  "comments": [
    {
      "key": {
        "uuid": "dab17558_60a725a7",
        "filename": "distil/collector/ceilometer.py",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 6484
      },
      "writtenOn": "2016-05-12T03:42:44Z",
      "side": 1,
      "message": "Should we define a base for collector? so that in the collector service, we can do something like:\n\n\ncollector \u003d driver.DriverManager(\u0027distil.collector\u0027,\n                               CONF.collector.collector_type,\n                               invoke_on_load\u003dTrue,\n                               invoke_kwds\u003d{}).driver\n\ncollector.collect()\n\nso that in the collector service, we don\u0027t have to hardcode the collector type which will be configured by operator.",
      "revId": "40c6854df0b6ddbf20b4c7c5d2ae29b3787dc9cf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab17558_e0ff9563",
        "filename": "distil/collector/ceilometer.py",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 6732
      },
      "writtenOn": "2016-05-12T03:49:29Z",
      "side": 1,
      "message": "Yes, it\u0027s my plan to add a base collector class, the CeilometerCollector will extends it. The driver mechanism has already been there in collector service.",
      "parentUuid": "dab17558_60a725a7",
      "revId": "40c6854df0b6ddbf20b4c7c5d2ae29b3787dc9cf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bab6814e_24e40a0c",
        "filename": "distil/config.py",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 6484
      },
      "writtenOn": "2016-05-18T04:33:49Z",
      "side": 1,
      "message": "The default value should be 3600 and which should be added into the help message so that operator can see it with the conf sample.",
      "revId": "40c6854df0b6ddbf20b4c7c5d2ae29b3787dc9cf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bab6814e_e162e915",
        "filename": "distil/config.py",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 6732
      },
      "writtenOn": "2016-05-18T21:39:19Z",
      "side": 1,
      "message": "ooh, yes, forget to recover it after testing",
      "parentUuid": "bab6814e_24e40a0c",
      "revId": "40c6854df0b6ddbf20b4c7c5d2ae29b3787dc9cf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bab6814e_a4a59ab6",
        "filename": "distil/constants.py",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 6484
      },
      "writtenOn": "2016-05-18T04:33:49Z",
      "side": 1,
      "message": "It\u0027s a little bit weird to main this in constants. Why can\u0027t we just use distil.collector or adding a backends package under distil.collector?",
      "revId": "40c6854df0b6ddbf20b4c7c5d2ae29b3787dc9cf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bab6814e_4495ce3e",
        "filename": "setup.cfg",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 6484
      },
      "writtenOn": "2016-05-18T04:33:49Z",
      "side": 1,
      "message": "(nit): add a space after \u003d",
      "revId": "40c6854df0b6ddbf20b4c7c5d2ae29b3787dc9cf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bab6814e_e130290a",
        "filename": "setup.cfg",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 6732
      },
      "writtenOn": "2016-05-18T21:39:19Z",
      "side": 1,
      "message": ":-)",
      "parentUuid": "bab6814e_4495ce3e",
      "revId": "40c6854df0b6ddbf20b4c7c5d2ae29b3787dc9cf",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}